"use strict";function _typeof(a){"@babel/helpers - typeof";return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(a){return typeof a}:function(a){return a&&"function"==typeof Symbol&&a.constructor===Symbol&&a!==Symbol.prototype?"symbol":typeof a},_typeof(a)}(function(a){if("object"===("undefined"==typeof exports?"undefined":_typeof(exports))&&"undefined"!=typeof module)module.exports=a();else if("function"==typeof define&&define.amd)define([],a);else{var b;b="undefined"==typeof window?"undefined"==typeof global?"undefined"==typeof self?this:self:global:window,b.AuthHelper=a()}})(function(){return function(){function b(d,e,g){function a(j,i){if(!e[j]){if(!d[j]){var f="function"==typeof require&&require;if(!i&&f)return f(j,!0);if(h)return h(j,!0);var c=new Error("Cannot find module '"+j+"'");throw c.code="MODULE_NOT_FOUND",c}var k=e[j]={exports:{}};d[j][0].call(k.exports,function(b){var c=d[j][1][b];return a(c||b)},k,k.exports,b,d,e,g)}return e[j].exports}for(var h="function"==typeof require&&require,c=0;c<g.length;c++)a(g[c]);return a}return b}()({1:[function(a,b){(function(){"use strict";b.exports={init:function init(a){this.AppConfig={},this.AppConfig.serviceWorkerUri="ServiceWorker.js",this.AppConfig.endpoints={authorization_endpoint:a.authorizationEndpoint,token_endpoint:a.tokenEndpoint},this.identityProxyMessageChannel=new MessageChannel,this.register()},register:function register(){"serviceWorker"in navigator&&navigator.serviceWorker.register(this.AppConfig.serviceWorkerUri).then(function(a){a.installing?console.log("Service worker installing"):a.waiting?console.log("Service worker installed"):a.active&&console.log("Service worker active");var b=function(){a.active.postMessage({message:"configuration",endpoints:this.AppConfig.endpoints},[this.identityProxyMessageChannel.port2])}.bind(this);navigator.serviceWorker.ready.then(b)}.bind(this)).catch(function(a){console.log("Registration failed with "+a)}.bind(this))}}})()},{}],2:[function(a,b){b.exports=a("./AuthHelper")},{"./AuthHelper":1}]},{},[2])(2)});
